{"version":3,"sources":["components/jumbotron/index.js","components/navBar/index.js","components/imageContainer/index.js","App.js","index.js"],"names":["Jumbotron","className","NavBar","props","score","topScore","ImageContainer","onClick","handleClick","id","src","image","alt","name","App","state","images","topScoreUpdate","setState","function","console","log","this","alert","reset","forEach","clicked","clickCounter","filter","sort","Math","floor","random","row","map","item","key","Component","ReactDOM","render","document","getElementById"],"mappings":"m9EAgBeA,MAbf,WACI,OACE,6BACE,yBAAKC,UAAU,6BACb,yBAAKA,UAAU,aACb,wBAAIA,UAAU,aAAd,qBACA,uBAAGA,UAAU,QAAb,sFCGGC,G,MATA,SAAAC,GACX,OACI,yBAAKF,UAAU,gCACX,0BAAMA,UAAU,wBAAhB,eACA,yBAAKA,UAAU,gBAAf,eAA2CE,EAAMC,OACjD,yBAAKH,UAAU,YAAf,cAAsCE,EAAME,a,MCMzCC,MAXf,SAAwBH,GAEpB,OACI,yBAAKF,UAAU,iBACX,yBAAKM,QAAU,kBAAMJ,EAAMK,YAAYL,EAAMM,MACzC,yBAAKC,IAAKP,EAAMQ,MAAOC,IAAKT,EAAMU,KAAMJ,GAAIN,EAAMM,Q,OCwFnDK,G,iNAvFXC,MAAQ,CACJC,SACAZ,MAAO,EACPC,SAAU,G,EAKdY,eAAiB,WACT,EAAKF,MAAMX,OAAS,EAAKW,MAAMV,SAC/B,EAAKa,SAAS,CACVb,SAAU,EAAKU,MAAMX,MACrBe,SAFU,WAGNC,QAAQC,IAAIC,KAAKP,MAAMV,aAGH,KAArB,EAAKU,MAAMX,QAClBmB,MAAM,kBACN,EAAKC,U,EAQbA,MAAQ,WACJ,EAAKT,MAAMC,OAAOS,QAAQ,SAAAd,GACtBA,EAAMe,SAAU,IAEpB,EAAKR,SAAS,CACVd,MAAO,IAEXmB,MAAM,uB,EAQVI,aAAe,SAAClB,GAGZ,IAAMiB,EAAUV,EAAOY,OAAO,SAAAjB,GAAK,OAAIA,EAAMF,KAAOA,KAEzB,IAAvBiB,EAAQ,GAAGA,SACXA,EAAQ,GAAGA,SAAU,EACrB,EAAKR,SAAS,CACVd,MAAO,EAAKW,MAAMX,MAAQ,KAG1B,EAAKoB,QAIb,EAAKT,MAAMC,OAAOa,KAAK,kBAAMC,KAAKC,MAAMD,KAAKE,SAAW,MAExD,EAAKf,kB,wEAGC,IAAD,OACP,OAEE,6BACI,kBAAC,EAAD,CAAQb,MAAOkB,KAAKP,MAAMX,MAAOC,SAAUiB,KAAKP,MAAMV,WACtD,kBAAC,EAAD,MACA,yBAAKJ,UAAU,iBACX,yBAAKgC,IAAI,aACL,6BACKX,KAAKP,MAAMC,OAAOkB,IAAI,SAAAC,GAAI,OACvB,kBAAC,EAAD,CACIxB,MAAQwB,EAAKxB,MACbH,YAAa,EAAKmB,aAClBS,IAAKD,EAAK1B,GACVA,GAAI0B,EAAK1B,GACTG,IAAKuB,EAAKtB,iB,GA9ExBwB,cCHlBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.dced2b24.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./jumbotron.css\";\n\nfunction Jumbotron() {\n    return (\n      <div>\n        <div className=\"jumbotron jumbotron-fluid\">\n          <div className=\"container\">\n            <h1 className=\"display-4\">Avian Memory Game</h1>\n            <p className=\"lead\">Click on an exotic bird to earn points, but you can only click on a bird once!</p>\n          </div>\n        </div>\n      </div>\n      )\n}\n\nexport default Jumbotron;","import React from \"react\";\nimport \"./navBar.css\";\n\nconst NavBar = props => {\n    return (\n        <nav className=\"navbar navbar-light bg-light\">\n            <span className=\"navbar-brand mb-0 h1\">Clicky Game</span>\n            <div className=\"currentScore\">Your score: {props.score}</div>\n            <div className=\"topScore\">Top score: {props.topScore}</div>\n        </nav>\n    )\n}\nexport default NavBar;","import React from \"react\";\nimport \"./imageContainer.css\";\n\nfunction ImageContainer(props) {\n// shuffle images everytime image is clicked\n    return (\n        <div className=\"img-container\">\n            <div onClick= {() => props.handleClick(props.id)}>\n                <img src={props.image} alt={props.name} id={props.id}/>\n            </div>\n        </div>\n    )\n    };\n\nexport default ImageContainer;","import React, { Component } from \"react\";\nimport Jumbotron from \"./components/jumbotron\";\nimport NavBar from \"./components/navBar\";\nimport ImageContainer from \"./components/imageContainer\";\nimport images from \"./components/images.json\";\nimport \"./index.css\"\n\nclass App extends Component {\n\n    state = {\n        images,\n        score: 0,\n        topScore: 0\n    };\n\n    // if current score is greater than top score\n    // make top score = to current score\n    topScoreUpdate = () => {\n        if (this.state.score >= this.state.topScore) {\n            this.setState({\n                topScore: this.state.score,\n                function() {\n                    console.log(this.state.topScore);\n                }\n            })\n        } else if (this.state.score === 15) {\n            alert(\"Yes!! You won!\");\n            this.reset();\n        }\n    }\n\n    // if image has already been clicked/\"clicked\": true\n    // reset score to 0.\n    // reset clicked states to false\n\n    reset = () => {\n        this.state.images.forEach(image => {\n            image.clicked = false;\n        })\n        this.setState({\n            score: 0\n        })\n        alert(\"Whoops! Game over!\");\n    }\n\n    // click counter for images\n    //  if correct image is clicked,\n    // increase score by 1 point.\n    // if image is clicked twice,\n\n    clickCounter = (id) => {\n\n        // filters through and finds image id equal to the image clicked\n        const clicked = images.filter(image => image.id === id);\n\n        if (clicked[0].clicked === false) {\n            clicked[0].clicked = true;\n            this.setState({\n                score: this.state.score + 1\n            }) \n            } else {\n                this.reset();\n            }\n\n        // shuffles images\n        this.state.images.sort(() => Math.floor(Math.random() - 0.5));\n        // score update\n        this.topScoreUpdate();\n    }\n\n    render() {\n      return (\n          \n        <div>\n            <NavBar score={this.state.score} topScore={this.state.topScore} />\n            <Jumbotron />\n            <div className=\"container app\">\n                <div row=\"col-md-12\">\n                    <div>\n                        {this.state.images.map(item => (\n                            <ImageContainer \n                                image= {item.image} \n                                handleClick={this.clickCounter}\n                                key={item.id}\n                                id={item.id}\n                                alt={item.name} \n                            />\n                        ))}\n                    </div>\n                </div>\n            </div>\n          </div>\n      )\n    };\n}\n\nexport default App;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));"],"sourceRoot":""}